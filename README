+------------------------------------------------------------------+
 schlep: An Automation Tool for a Time & Attendance Web Application
 D. Racine 20170601
+------------------------------------------------------------------+

SUMMARY

  usage: schlep command [arguments] [targets]

  Applies 'command [arguments]' to target webapp instances.

      command    arguments
      ---------  --------------------------------------
      allgroovy  scriptfile|- [inputfile]
      exec       lispfile|- [args]
      help       [command]
      lock
      login
      rungroovy  scriptfile|- [inputfile]
      showmode
      target     list
                 remove id
                 add id baseURL nodecount user password
      unlock

  See 'schlep help {command}' for details.



OUTPUT

  Standard output and error: Succeeds silently and fails loudly, except in use
  cases designed to display information (e.g. help, target list, showmode). 

  Output documents produced by instances of groovy script execution invoked by
  rungroovy and allgroovy are written to files in schlep's current working
  directory.



BLOCKING BEHAVIOR AND TIMEOUTS

  As an HTTP client, schlep waits for responses to its GET and POST requests
  until either a response is received, the connection is externally reset,
  or an applicable client timeout expires. schlep's timeouts are defined in
  src/conf.lisp.

  Long-running groovy scripts should return their output documents as expected
  for a given target if *worker-thread-timeout* is greater than the total time
  consumed by script execution on that target. In rungroovy's case, this is
  the time required by the webapp to run the script once. In allgroovy's case,
  it is the product of the target's nodecount and the time required by a single
  execution of the script.

  When invoking long-running groovy scripts, schlep should be protected from
  inadvertent early termination e.g. by running it via nohup or screen.



EXIT STATUS

  0  All actions completed successfully. Any nonzero exit status indicates that
     schlep is unable to assert that all actions were successful.

  1  One or more actions failed, some may have succeeded. Failed actions are
     documented in messages printed to standard error.

  2  schlep asserts that no actions were attempted on any targets or conf data.

  3  schlep asserts that all of the requested actions failed.

  Note that rungroovy and allgroovy operations are considered successful if
  schlep receives an HTTP 200 in response to POSTing the Script Execution form.
  This does not necessarily mean that the posted groovy script had its intended
  effect, as such can be determined only by interpreting the content of the
  script's output document in relation to any expected functionality or content
  changes within the web application.
